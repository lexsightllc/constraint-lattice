name: Structure Steward CI

on:
  push:
    branches: ["main", "release/*"]
  pull_request:
  workflow_dispatch:

jobs:
  quality-gate:
    name: Quality Gate
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    env:
      PYTHON_VERSION: "3.11"
      NODE_VERSION: "18"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ env.PYTHON_VERSION }}-${{ hashFiles('requirements-lock.txt', 'requirements-dev.txt', 'pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ env.PYTHON_VERSION }}-

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y build-essential libpq-dev

      - name: Bootstrap environment
        run: make bootstrap ARGS="--ci"

      - name: Run quality checks
        run: make check

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.os }}
          path: |
            coverage.xml
            htmlcov
          if-no-files-found: ignore

  security:
    name: Security Gates
    runs-on: ubuntu-latest
    needs: quality-gate
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Bootstrap (CI)
        run: make bootstrap ARGS="--ci"

      - name: Run security scan
        run: make security-scan

      - name: Upload SBOM
        if: always()
        run: make sbom && ls sbom

      - name: Upload SBOM artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom
          if-no-files-found: error
